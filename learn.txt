We first create a Repository with a particular name.[Note that the name can never have spaces,so if we enter a name with spaces,git adds a hyphen in those spaces]
Next we clik the "add new file" and give a name("learn.txt") to the file which will be contained in this "HandsOnGit" repository.
Now we wish to save this file but observe that there is no such save option.Rather we have a "commit new file".Can be though of as a "save" option.
Observe that there are two options-The 1st being "Commit directly to the main branch".2nd being "Create a new branch..."
We first select the first one and press "commit new file".

After it has been saved we clck on "learn.txt" and click on edit option.On making changes we press-"Commit Changes" and also add a note-"Adding Line 7."
Repeating the above i.e Line 7 function

On clicking the history page we get a series of changes that has been made.Observe that on clicking the option we can view the changes made which are highlighted by the green color.Also note that on clicking <> button we can view the state of our files before the changes or modifications were made.
Also take a note of the weird long number which appears both at the URL end and the right side....that number is known as the "Commit Hash" and it is unique corresponding to that particular commit change
Change1

Besides HandsOnGit/learn.txt you will see th diffferent branches available.Now usually there is the Main/Master Branch.But suppose we wish to divert from the master branch and simultaneously work on the same thing differently we can create aother branch.What this does is that we dont explicitly work on the master branch so as to avoid any confusion or errors.This branch can even be merged with the existing main branch.GIT checks whether merging is possible or not and one can merge it with the master branch.Now to check the branches we can click on insights and then select "Network" to understand the various branches of this Repository.
